import csv
import os
from subprocess import call

# Opcodes list
opcodes_list = ['mov', 'push', 'call', 'pop', 'cmp', 'jz', 'lea', 'test', 'jmp', 'add', 'jnz', 'retn', 'xor', 'and', 'bt', 'fdivp', 'fild', 'fstcw', 'imul', 'int', 'nop', 'pushf', 'rdtsc', 'sbb', 'setb', 'setle', 'shld', 'std', '(bad)']

# Prepare features list
headers = ['name']
headers.extend(opcodes_list)
headers.append('labels')

# Folder to process
PATH = "./elf"

# Check if file present, if not, create the file in write append mode and write initial feature names list `headers`
if not os.path.exists('./check.csv'):
	with open("check.csv", "wb") as csv_file:
		writer = csv.writer(csv_file, delimiter=',')
		writer.writerow(headers)

# Consider 1000 files in PATH (not $PATH :P!)
for i in os.listdir(PATH)[:1000]:
	row = [0]*(len(headers)-1)
	file = os.path.join(PATH, i)
	if os.path.isfile(file):
		row[0] = file
		# Use objdump to get disassembly
		call('objdump -M intel -D ' + file[2:] + ' > hello.txt', shell=True)
		with open('hello.txt', 'r') as f:
			# Check for opcodes
			for l in f:
				if ':' in l:
					# print l
					for i, opcode in enumerate(opcodes_list):
						if opcode in l:
							row[i+1] += 1
		# ? is used for WEKA to point to feature we wish to predict
		row.append('?')
		# Write row of features
		with open("check.csv", "ab") as csv_file:
			writer = csv.writer(csv_file, delimiter=',')
			writer.writerow(row)
